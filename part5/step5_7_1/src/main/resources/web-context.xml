<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>
    <mvc:annotation-driven/>

    <!-- Due to the fact that our RestControllers don't implement any interface and we have <aop:aspectj-autoproxy/>
        configuration in underlying 'application-context.xml' with settings to use JdkDynamicProxy we face a problem
        that our controllers can't be correctly instantiated.
        So we forced to specify <aop:aspectj-autoproxy/> with settings to use CGLIB for wrapping RestController,
        but it isn't interfere with <aop:aspectj-autoproxy/> settings for services where we specify JdkDynamicProxy
    -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean class="com.timazet.controller.DogController">
        <constructor-arg ref="dogService"/>
    </bean>
    <bean class="com.timazet.controller.ControllerExceptionHandler"/>

</beans>